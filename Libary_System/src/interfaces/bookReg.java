package interfaces;

//Calendar and GregorianCalendar used to show the date 
import codes.DBconnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;


public class bookReg extends javax.swing.JFrame {
    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
    int timeRun=0;
   
    public bookReg() {
        initComponents();
        
        //hide validation fields
        jLabel17.setVisible(false);
        jLabel18.setVisible(false);jLabel19.setVisible(false);
        jLabel20.setVisible(false);jLabel21.setVisible(false);
        
        con=DBconnect.connect();
        
        tableload();
        
        //set the form center in the window
        setLocationRelativeTo(null);
        
        //set table transparancy
        jTable1.setOpaque(false);
        ((DefaultTableCellRenderer)jTable1.getDefaultRenderer(Object.class)).setOpaque(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        jTable1.setShowGrid(false);
        
        
       currentDate();
    

             //Time Setting done here
        new Thread()
        {
        public void run()
        {
        while(timeRun==0)
        {
            Calendar cal=new GregorianCalendar();
            
            int hour=cal.get(Calendar.HOUR);
            int minute=cal.get(Calendar.MINUTE);
            int second=cal.get(Calendar.SECOND);
            int AM_PM=cal.get(Calendar.AM_PM);
            String day_night=" ";
            
            if(AM_PM==1)
        {
            day_night="PM";
        }
            else
        {
            day_night="AM";
        }
            
            String time= hour+":"+minute+":"+second+" "+day_night;
            showtime.setText(time);
        }
        }
        
        }.start();  
            
       //Time setting ends here
    
    }
    
    //loard the record to table after adding  
    public void tableload(){
        try {
            String sql="select BookID,BookName,Author,Publisher,PublishedYear,Edition,Category,RegisteredDate,Price from book";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
        }
    }
    
    //show date
    public void currentDate(){
                    Calendar cal=new GregorianCalendar();
                    int month=cal.get(Calendar.MONTH);
                    int year=cal.get(Calendar.YEAR);
                    int day=cal.get(Calendar.DAY_OF_MONTH);
                    showdate.setText(year+"-"+(month+1)+"-"+day);
                    regdate.setText(year+"-"+(month+1)+"-"+day);
               }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        bid = new javax.swing.JTextField();
        bnm = new javax.swing.JTextField();
        atr = new javax.swing.JTextField();
        pub = new javax.swing.JTextField();
        regdate = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        showdate = new javax.swing.JLabel();
        showtime = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pri = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        yr = new javax.swing.JComboBox();
        ed = new javax.swing.JComboBox();
        cat = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(950, 695));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 280, 100);

        jLabel3.setFont(new java.awt.Font("Sylfaen", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("Book Registration");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(300, 50, 430, 50);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("Book ID");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 130, 80, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Author");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 210, 70, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Publisher");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 250, 80, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setText("Published year");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(60, 290, 120, 22);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("Edition");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(60, 330, 80, 22);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Category");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(60, 370, 90, 22);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 153));
        jLabel10.setText("Registered date");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(60, 410, 130, 22);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 153));
        jLabel11.setText("Price");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(60, 450, 50, 22);

        bid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bidKeyReleased(evt);
            }
        });
        getContentPane().add(bid);
        bid.setBounds(230, 130, 190, 30);

        bnm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bnmKeyReleased(evt);
            }
        });
        getContentPane().add(bnm);
        bnm.setBounds(230, 170, 190, 30);

        atr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                atrKeyReleased(evt);
            }
        });
        getContentPane().add(atr);
        atr.setBounds(230, 210, 190, 30);
        getContentPane().add(pub);
        pub.setBounds(230, 250, 190, 30);
        getContentPane().add(regdate);
        regdate.setBounds(230, 410, 190, 30);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons_openBook.png"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(700, 110, 200, 200);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 153));
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(580, 320, 170, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 153));
        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(580, 370, 170, 30);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 51, 153));
        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(580, 420, 170, 30);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/homeButton.png"))); // NOI18N
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel13);
        jLabel13.setBounds(860, 580, 75, 70);

        showdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        showdate.setForeground(new java.awt.Color(0, 51, 102));
        getContentPane().add(showdate);
        showdate.setBounds(800, 10, 140, 20);

        showtime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        showtime.setForeground(new java.awt.Color(0, 51, 102));
        showtime.setText(" ");
        getContentPane().add(showtime);
        showtime.setBounds(800, 30, 100, 20);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 153));
        jLabel14.setText("Book name");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(60, 170, 100, 20);
        getContentPane().add(pri);
        pri.setBounds(230, 450, 190, 30);

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setForeground(new java.awt.Color(204, 204, 255));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 490, 830, 170);

        yr.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", " " }));
        getContentPane().add(yr);
        yr.setBounds(230, 290, 190, 30);

        ed.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ed.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2nd edition", "3rd edition", "4th edition", "5th edition", "6th edition", "7th edition", "8th edition", "9th edition", "10th edition", "11th edition", "12th edition", " ", " " }));
        getContentPane().add(ed);
        ed.setBounds(230, 330, 190, 30);

        cat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Computer Programming", "Civil Engineering", "Database management", "English Language", "Buisness Management", "Mathamatics" }));
        getContentPane().add(cat);
        cat.setBounds(230, 370, 190, 30);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("*Required");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(430, 140, 70, 20);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("*Required");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(430, 180, 70, 20);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("*Required");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(430, 220, 70, 20);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("*Required");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(430, 260, 70, 20);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("*Required");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(430, 460, 70, 20);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 51, 153));
        jButton4.setText("Report");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(813, 370, 110, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bkground.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 950, 680);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        adminHome hom=new adminHome();
         hom.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //hide validation fields
        jLabel17.setVisible(false);jLabel18.setVisible(false);jLabel19.setVisible(false);
        jLabel20.setVisible(false);jLabel21.setVisible(false);
        
        boolean requiredField=true;
        //validating fields
        if(bid.getText().length()==0||bnm.getText().length()==0||atr.getText().length()==0||pub.getText().length()==0||pri.getText().length()==0)
        {
            requiredField=false;
        }
        
        //add records
        if(requiredField==true)
        {
            //succesfull adding
        String id=bid.getText();
        String nm=bnm.getText();
        String autr=atr.getText();
        String publ=pub.getText();
        String yer=yr.getSelectedItem().toString();
        String edt=ed.getSelectedItem().toString();
        String catt=cat.getSelectedItem().toString();
        String dt=regdate.getText();
        String pric=pri.getText();
        
        try {
            String q="INSERT INTO book (BookID,BookName,Author,Publisher,PublishedYear,Edition,Category,RegisteredDate,Price) VALUES ('"+ id +"','"+ nm +"','"+ autr +"','"+ publ +"','"+ yer +"','"+ edt +"','"+ catt +"','"+ dt +"','"+ pric +"')";
            pst=con.prepareStatement(q);
            pst.execute();
            tableload();
            //clear all textboxes after deleting
            bid.setText("");bnm.setText("");atr.setText("");pub.setText("");pri.setText("");
            
            Random rand = new Random();
            int selected = 10000+rand.nextInt(20000);
            bid.setText(String.valueOf(selected));
            
            JOptionPane.showMessageDialog(this, "Added Successfully");
        } catch (Exception e) {
            System.out.println(e);
        }
        }
        else
        {
            //display appropriate error (*required)
            if(bid.getText().length()==0){jLabel18.setVisible(true);}
            if(bnm.getText().length()==0){jLabel21.setVisible(true);}
            if(atr.getText().length()==0){jLabel20.setVisible(true);}
            if(pub.getText().length()==0){jLabel19.setVisible(true);}
            if(pri.getText().length()==0){jLabel17.setVisible(true);}
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //hide validation fields
        jLabel17.setVisible(false);jLabel18.setVisible(false);jLabel19.setVisible(false);
        jLabel20.setVisible(false);jLabel21.setVisible(false);
        
        boolean requiredField=true;
        //validating fields
        if(bid.getText().length()==0||bnm.getText().length()==0||atr.getText().length()==0||pub.getText().length()==0||pri.getText().length()==0)
        {
            requiredField=false;
        }
        
        //update records
        int x=JOptionPane.showConfirmDialog(null, "Do you really want to update??");
        if(requiredField==true){
        if (x==0) {
            String id=bid.getText();
            String nm=bnm.getText();
            String autr=atr.getText();
            String publ=pub.getText();
            String yer=yr.getSelectedItem().toString();
            String edt=ed.getSelectedItem().toString();
            String catt=cat.getSelectedItem().toString();
            String dt=regdate.getText();
            String pric=pri.getText();
            
            
            String sql="update book set BookName='"+ nm +"',Author='"+ autr +"',Publisher='"+ publ +"',PublishedYear='"+ yer +"',Edition='"+ edt +"',Category='"+ catt +"',RegisteredDate='"+ dt +"',Price='"+ pric +"' where BookID='"+ id+"'";
            try {
            pst=con.prepareStatement(sql);
            pst.execute();
            tableload();
            //clear all textboxes after deleting
            bid.setText("");bnm.setText("");atr.setText("");pub.setText("");pri.setText("");
            
            JOptionPane.showMessageDialog(this, "Updated Successfully");
            } catch (Exception e) {
            }
        }
        }
        else
        {
            //display appropriate error (*required)
            if(bid.getText().length()==0){jLabel18.setVisible(true);}
            if(bnm.getText().length()==0){jLabel21.setVisible(true);}
            if(atr.getText().length()==0){jLabel20.setVisible(true);}
            if(pub.getText().length()==0){jLabel19.setVisible(true);}
            if(pri.getText().length()==0){jLabel17.setVisible(true);}
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //delete records
        int x=JOptionPane.showConfirmDialog(null, "Do you really want to delete??");
        
        if (x==0) {
            String i=bid.getText();
            String sql="delete from book where BookID='"+ i +"'";
            try {
                
            pst=con.prepareStatement(sql);
            pst.execute();
            tableload();
            JOptionPane.showMessageDialog(this, "Deleted Successfully");
            //clear all textboxes after deleting
            bid.setText("");bnm.setText("");atr.setText("");pub.setText("");pri.setText("");
            
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Random rand = new Random();
        int selected = 10000+rand.nextInt(20000);
        bid.setText(String.valueOf(selected));
    }//GEN-LAST:event_formWindowOpened

    private void bidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bidKeyReleased
             //search for student by id
        String id1=bid.getText();
        
        String sql="select BookID,BookName,Author,Publisher,PublishedYear,Edition,Category,RegisteredDate,Price from book where BookID like '%"+ id1 +"%'";
        try {
                
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         
            } catch (Exception e) {
            }
    }//GEN-LAST:event_bidKeyReleased

    private void bnmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bnmKeyReleased
             //search for student by id
        String n=bnm.getText();
        
        String sql="select BookID,BookName,Author,Publisher,PublishedYear,Edition,Category,RegisteredDate,Price from book where BookName like '%"+ n +"%'";
        try {
                
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         
            } catch (Exception e) {
            }
    }//GEN-LAST:event_bnmKeyReleased

    private void atrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_atrKeyReleased
             //search for student by id
        String a=atr.getText();
        
        String sql="select BookID,BookName,Author,Publisher,PublishedYear,Edition,Category,RegisteredDate,Price from book where Author like '%"+ a +"%'";
        try {
                
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         
            } catch (Exception e) {
            }
    }//GEN-LAST:event_atrKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       //filling the fileds when select the row 
        int r=jTable1.getSelectedRow();
        
        String a=jTable1.getValueAt(r, 0).toString();
        String b=jTable1.getValueAt(r, 1).toString();
        String c=jTable1.getValueAt(r, 2).toString();
        String d=jTable1.getValueAt(r, 3).toString();
        String e=jTable1.getValueAt(r, 4).toString();
        String f=jTable1.getValueAt(r, 5).toString();
        String g=jTable1.getValueAt(r, 6).toString();
        String h=jTable1.getValueAt(r, 7).toString();
        String i=jTable1.getValueAt(r, 8).toString();
        
        bid.setText(a);
        bnm.setText(b);
        atr.setText(c);
        pub.setText(d);
        yr.setSelectedItem(e);
        ed.setSelectedItem(f);
        cat.setSelectedItem(g);
        regdate.setText(h);
        pri.setText(i);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // this code belongs to  genarating ireports 
        
        try 
        {
            net.sf.jasperreports.engine.design.JasperDesign rep = JRXmlLoader.load("src\\Ireport\\book.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(rep);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
            JasperViewer.viewReport(jp,false);
        } 
        catch (Exception ex) 
        {
            System.out.println(ex);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bookReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bookReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bookReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bookReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bookReg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField atr;
    private javax.swing.JTextField bid;
    private javax.swing.JTextField bnm;
    private javax.swing.JComboBox cat;
    private javax.swing.JComboBox ed;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField pri;
    private javax.swing.JTextField pub;
    private javax.swing.JTextField regdate;
    private javax.swing.JLabel showdate;
    private javax.swing.JLabel showtime;
    private javax.swing.JComboBox yr;
    // End of variables declaration//GEN-END:variables
}
